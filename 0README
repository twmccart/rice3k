#!/bin/bash
set -euo pipefail
# Relationships between 20 rice cultivars from the 3K Rice Genome project.

filename=$1
cultivarlist=$(cat $filename)

root="$(pwd)"


# Requires
#module load samtools/1.3 java/1.8.0_40 tabix/0.2.6 bcftools/1.3 vcftools/0.1.13 python/2.7.3

cd $root
source $root/src/environment

for cultivar in ${cultivarlist}; do (
# BAM files of sequence read mapping
# Murat figured out how to download these from a site that isn't internet visible.
	cd $maps
	wget https://s3.amazonaws.com/3kricegenome/Nipponbare/${cultivar}.realigned.bam
	samtools index ${cultivar}.realigned.bam

# The GATK tool Haplotype Caller is used to compare the bam file with the reference genome and generate a gvcf file
	cd $calls
	call_variants $cultivar

# The GATK tool GenotypeGVCFs takes the gvcf file and produces a normal vcf.
# The option -allSites is necessary for our purposes, so that called sites that match the reference will be able to be compared to SNPs in other cultivars.
	full_genotype $cultivar

# Before merging VCFs from different cultivars, it is useful to remove indels and uncalled or heterozygous sites with "bcftools view".
# It is also expedient to split the VCF by chromosome so that merges can be performed with some degree of parallelism.
	clean_and_split_vcf $cultivar
	) &

done

wait

# Once all of the cultivars are cleaned and split, the chromosomes can be merged by vcf-merge.
# "bcftools merge" is supposed to be faster, but seems to have a problem with something in the format of these files.
# The merge function includes filters to remove any sites that don't have at least one alternate allele and one match to the reference, as well as any "Multiple Nucleotide Polymorphism" sites.
cd $split
for chromosome in {chr01,chr02,chr03,chr04,chr05,chr06,chr07,chr08,chr09,chr10,chr11,chr12}; do
	merge_chromosome $chromosome &
done

# After the chromosomes have been individually merged and cleaned, they can be reassembled into one VCF file containing all the sites that were called in all the input cultivars and contain at least one SNP.
cd $merges
vcf-concat chr*.cleaned.vcf.gz > ${filename%.*}.merge.cleaned.vcf

# To look at SNPs that are present to a greater degree in the genome, a refiltering step produces additional vcf files that contain sites that have varying minimum numbers of SNPs.
#refilter_merged ${filename%.*}.merge.cleaned.vcf

# In order to make trees, random sites from the VCF are selected and turned into a FASTA alignment.
# RAxML was used to generate trees from several alignments, all of which looked similar.
bash ../src/randomsubsetvcf.sh ${filename%.*}.merge.cleaned.vcf 100000 > ../alignments/${filename%.*}.100000SNPs.vcf
cd $alignments
python ../src/snp2seq.py ${filename%.*}.100000SNPs.vcf
bash ../src/generatetree.sh ${filename%.*}.100000SNPs.vcf
# Optional
# find . -name "RAxML*" ! -name "*.colorized" -delete

# The files that end with ".colorized" are suitable to be opened in FigTree for easy viewing.
